{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx\";\nimport React, { forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    data-cypress=\"draggable-item\"\n    >\n      {props.children}\n    </button>\n  );\n}\n*/\nexport let Axis;\n\n(function (Axis) {\n  Axis[Axis[\"All\"] = 0] = \"All\";\n  Axis[Axis[\"Vertical\"] = 1] = \"Vertical\";\n  Axis[Axis[\"Horizontal\"] = 2] = \"Horizontal\";\n})(Axis || (Axis = {}));\n\nexport const Draggable = /*#__PURE__*/forwardRef(_c = function Draggable({\n  axis,\n  dragOverlay,\n  dragging,\n  handle,\n  label,\n  listeners,\n  translate,\n  ...props\n}, ref) {\n  var _translate$x, _translate$y;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    ...props,\n    \"aria-label\": \"Draggable\",\n    \"data-cypress\": \"draggable-item\",\n    ...(handle ? {} : listeners),\n    tabIndex: handle ? -1 : undefined,\n    style: {\n      '--translate-x': `${(_translate$x = translate === null || translate === void 0 ? void 0 : translate.x) !== null && _translate$x !== void 0 ? _translate$x : 0}px`,\n      '--translate-y': `${(_translate$y = translate === null || translate === void 0 ? void 0 : translate.y) !== null && _translate$y !== void 0 ? _translate$y : 0}px`\n    },\n    children: \"Drag\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Draggable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Draggable$forwardRef\");\n$RefreshReg$(_c2, \"Draggable\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx"],"names":["React","forwardRef","Axis","Draggable","axis","dragOverlay","dragging","handle","label","listeners","translate","props","ref","undefined","x","y"],"mappings":";AACA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAiBZ,OAAO,MAAMC,SAAS,gBAAGF,UAAU,MACjC,SAASE,SAAT,CACE;AACEC,EAAAA,IADF;AAEEC,EAAAA,WAFF;AAGEC,EAAAA,QAHF;AAIEC,EAAAA,MAJF;AAKEC,EAAAA,KALF;AAMEC,EAAAA,SANF;AAOEC,EAAAA,SAPF;AAQE,KAAGC;AARL,CADF,EAWEC,GAXF,EAYE;AAAA;;AAGA,sBAEI;AACE,IAAA,GAAG,EAAEA,GADP;AAAA,OAEMD,KAFN;AAGE,kBAAW,WAHb;AAIE,oBAAa,gBAJf;AAAA,QAKOJ,MAAM,GAAG,EAAH,GAAQE,SALrB;AAME,IAAA,QAAQ,EAAEF,MAAM,GAAG,CAAC,CAAJ,GAAQM,SAN1B;AAOE,IAAA,KAAK,EACH;AACE,uBAAkB,GAAD,gBAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,CAAd,uDAAmB,CAAE,IADxC;AAEE,uBAAkB,GAAD,gBAAGJ,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEK,CAAd,uDAAmB,CAAE;AAFxC,KARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBD,CAtCgC,CAA5B;MAAMZ,S","sourcesContent":["import type {DraggableSyntheticListeners, Translate} from '@dnd-kit/core';\nimport React, {forwardRef} from 'react';\nimport classNames from 'classnames';\nimport styles from './Draggable.module.css';\n \n/*\nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    data-cypress=\"draggable-item\"\n    >\n      {props.children}\n    </button>\n  );\n}\n*/\n\nexport enum Axis {\n  All,\n  Vertical,\n  Horizontal,\n}\n\ninterface Props {\n  axis?: Axis;\n  dragOverlay?: boolean;\n  dragging?: boolean;\n  handle?: boolean;\n  label?: string;\n  listeners?: DraggableSyntheticListeners;\n  style?: React.CSSProperties;\n  translate?: Translate;\n}\n\nexport const Draggable = forwardRef<HTMLButtonElement, Props>(\n  function Draggable(\n    {\n      axis,\n      dragOverlay,\n      dragging,\n      handle,\n      label,\n      listeners,\n      translate,\n      ...props\n    },\n    ref\n  ) {\n\n    \n    return (\n\n        <button\n          ref={ref}\n          {...props}\n          aria-label=\"Draggable\"\n          data-cypress=\"draggable-item\"\n          {...(handle ? {} : listeners)}\n          tabIndex={handle ? -1 : undefined}\n          style={\n            {\n              '--translate-x': `${translate?.x ?? 0}px`,\n              '--translate-y': `${translate?.y ?? 0}px`,\n            } as React.CSSProperties\n          }\n        >\n          \n          Drag\n        </button>\n\n\n    );\n  }\n);\n\n\n"]},"metadata":{},"sourceType":"module"}