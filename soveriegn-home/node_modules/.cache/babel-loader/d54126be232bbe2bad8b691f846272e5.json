{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport styles from './Draggable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    data-cypress=\"draggable-item\"\n    >\n      {props.children}\n    </button>\n  );\n}\n*/\nexport let Axis;\n\n(function (Axis) {\n  Axis[Axis[\"All\"] = 0] = \"All\";\n  Axis[Axis[\"Vertical\"] = 1] = \"Vertical\";\n  Axis[Axis[\"Horizontal\"] = 2] = \"Horizontal\";\n})(Axis || (Axis = {}));\n\nfunction Properties(p, isDrag) {\n  _s();\n\n  const [parent, setParent] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  setParent(p);\n  setIsDragging(isDrag);\n}\n\n_s(Properties, \"u9VWArf3ULghpJeNIE8XOb6KWu4=\");\n\n_c = Properties;\nexport const Draggable = /*#__PURE__*/forwardRef(_c2 = function Draggable({\n  identity,\n  axis,\n  dragOverlay,\n  dragging,\n  handle,\n  label,\n  listeners,\n  translate,\n  ...props\n}, ref) {\n  var _translate$x, _translate$y;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(styles.Draggable, dragOverlay && styles.dragOverlay, dragging && styles.dragging, handle && styles.handle),\n    style: {\n      '--translate-x': `${(_translate$x = translate === null || translate === void 0 ? void 0 : translate.x) !== null && _translate$x !== void 0 ? _translate$x : 0}px`,\n      '--translate-y': `${(_translate$y = translate === null || translate === void 0 ? void 0 : translate.y) !== null && _translate$y !== void 0 ? _translate$y : 0}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      ...props,\n      \"aria-label\": \"Draggable\",\n      \"data-cypress\": \"draggable-item\" + identity,\n      ...(handle ? {} : listeners),\n      tabIndex: handle ? -1 : undefined,\n      className: \"square_red\",\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n});\n_c3 = Draggable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Properties\");\n$RefreshReg$(_c2, \"Draggable$forwardRef\");\n$RefreshReg$(_c3, \"Draggable\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx"],"names":["React","forwardRef","classNames","styles","Axis","Properties","p","isDrag","parent","setParent","useState","isDragging","setIsDragging","Draggable","identity","axis","dragOverlay","dragging","handle","label","listeners","translate","props","ref","x","y","undefined"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAmBZ,SAASC,UAAT,CAAoBC,CAApB,EAA6BC,MAA7B,EAA2C;AAAA;;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAA0B,IAA1B,CAApC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BF,QAAQ,CAAC,KAAD,CAA5C;AACAD,EAAAA,SAAS,CAACH,CAAD,CAAT;AACAM,EAAAA,aAAa,CAACL,MAAD,CAAb;AACD;;GALQF,U;;KAAAA,U;AAOT,OAAO,MAAMQ,SAAS,gBAAGZ,UAAU,OACjC,SAASY,SAAT,CACE;AACEC,EAAAA,QADF;AAEEC,EAAAA,IAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,QAJF;AAKEC,EAAAA,MALF;AAMEC,EAAAA,KANF;AAOEC,EAAAA,SAPF;AAQEC,EAAAA,SARF;AASE,KAAGC;AATL,CADF,EAYEC,GAZF,EAaE;AAAA;;AAGA,sBACE;AACE,IAAA,SAAS,EAAErB,UAAU,CACnBC,MAAM,CAACU,SADY,EAEnBG,WAAW,IAAIb,MAAM,CAACa,WAFH,EAGnBC,QAAQ,IAAId,MAAM,CAACc,QAHA,EAInBC,MAAM,IAAIf,MAAM,CAACe,MAJE,CADvB;AAOE,IAAA,KAAK,EACH;AACE,uBAAkB,GAAD,gBAAGG,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,CAAd,uDAAmB,CAAE,IADxC;AAEE,uBAAkB,GAAD,gBAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,CAAd,uDAAmB,CAAE;AAFxC,KARJ;AAAA,2BAcE;AACE,MAAA,GAAG,EAAEF,GADP;AAAA,SAEMD,KAFN;AAGE,oBAAW,WAHb;AAIE,sBAAc,mBAAmBR,QAJnC;AAAA,UAKOI,MAAM,GAAG,EAAH,GAAQE,SALrB;AAME,MAAA,QAAQ,EAAEF,MAAM,GAAG,CAAC,CAAJ,GAAQQ,SAN1B;AAOE,MAAA,SAAS,EAAG,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9CgC,CAA5B;MAAMb,S","sourcesContent":["import type {DraggableSyntheticListeners, Translate, UniqueIdentifier} from '@dnd-kit/core';\nimport React, {forwardRef} from 'react';\nimport classNames from 'classnames';\nimport styles from './Draggable.module.css';\nimport { useDerivedTransform } from '@dnd-kit/core/dist/components/DragOverlay/hooks';\nimport { Dimensions, TouchableHighlight, Text } from 'react-native';\n \n/*\nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    data-cypress=\"draggable-item\"\n    >\n      {props.children}\n    </button>\n  );\n}\n*/\n\nexport enum Axis {\n  All,\n  Vertical,\n  Horizontal,\n}\n\ninterface Props {\n  axis?: Axis;\n  dragOverlay?: boolean;\n  dragging?: boolean;\n  handle?: boolean;\n  label?: string;\n  listeners?: DraggableSyntheticListeners;\n  style?: React.CSSProperties;\n  translate?: Translate;\n  identity?: number;\n\n}\n\nfunction Properties(p : any, isDrag : any) {\n  const [parent, setParent] = useState<UniqueIdentifier | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  setParent(p);\n  setIsDragging(isDrag);\n}\n\nexport const Draggable = forwardRef<HTMLDivElement, Props>(\n  function Draggable(\n    {\n      identity,\n      axis,\n      dragOverlay,\n      dragging,\n      handle,\n      label,\n      listeners,\n      translate,\n      ...props\n    },\n    ref\n  ) {\n\n    \n    return (\n      <div\n        className={classNames(\n          styles.Draggable,\n          dragOverlay && styles.dragOverlay,\n          dragging && styles.dragging,\n          handle && styles.handle\n        )}\n        style={\n          {\n            '--translate-x': `${translate?.x ?? 0}px`,\n            '--translate-y': `${translate?.y ?? 0}px`,\n          } as React.CSSProperties\n        }\n      >\n        <div\n          ref={ref}\n          {...props}\n          aria-label=\"Draggable\"\n          data-cypress={\"draggable-item\" + identity}\n          {...(handle ? {} : listeners)}\n          tabIndex={handle ? -1 : undefined}\n          className = \"square_red\"\n        > \n          Drag\n        </div>\n      \n      </div>\n    );\n  }\n);\n\n\n"]},"metadata":{},"sourceType":"module"}