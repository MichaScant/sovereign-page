{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./GridGame.css\";\nimport { DndContext, useDraggable, DragOverlay } from '@dnd-kit/core';\nimport { Draggable } from './Draggable';\nimport { Droppable } from './Droppable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DraggableItem({\n  handle\n}) {\n  _s();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: 'draggable-item'\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DraggableItem, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c = DraggableItem;\nexport function GridGame({\n  modifiers\n}) {\n  _s2();\n\n  const num = -1;\n  const grid = [[\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], [\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\"], [\"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\"], [\"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\"], [\"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\"], [\"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"], [\"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\"], [\"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\"], [\"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\"], [\"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]];\n  const [parent, setParent] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDropped, setIsDropped] = useState(false);\n\n  const draggable = /*#__PURE__*/_jsxDEV(DraggableItem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 23\n  }, this); //const grid = Array(10).fill(Array(10).fill(<div className = \"square_green\"/>))\n  //this.populateGrid();\n  //this.createGrid(); \n  //const grid = Array(10).fill(Array(10).fill(\"A\"))\n  //const grid = Array(10).fill(\"A\")\n\n\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    modifiers: parent === null ? undefined : modifiers,\n    onDragStart: () => setIsDragging(true),\n    onDragEnd: ({\n      over\n    }) => {\n      setParent(over ? over.id : null);\n      setIsDragging(false);\n      num = 1;\n    },\n    onDragCancel: () => setIsDragging(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop\",\n      children: parent === null ? draggable : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map(row => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.map(tile => {\n            return /*#__PURE__*/_jsxDEV(Droppable, {\n              id: tile,\n              dragging: isDragging,\n              children: parent === tile ? draggable : 'drop'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: isDragging ? /*#__PURE__*/_jsxDEV(Draggable, {\n        dragging: true,\n        dragOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 31\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(GridGame, \"ZfvfIN8ul4rKT3EKYp7x+prGI1k=\");\n\n_c2 = GridGame;\nexport default GridGame; //<Tile />  \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DraggableItem\");\n$RefreshReg$(_c2, \"GridGame\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx"],"names":["React","useState","DndContext","useDraggable","DragOverlay","Draggable","Droppable","DraggableItem","handle","isDragging","setNodeRef","listeners","id","opacity","undefined","GridGame","modifiers","num","grid","parent","setParent","setIsDragging","isDropped","setIsDropped","draggable","over","map","row","tile"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./GridGame.css\";\nimport {\n  DndContext, \n  useDraggable, \n  DragEndEvent, \n  CollisionDetection as CollisionDetectionType, \n  Modifiers, \n  UniqueIdentifier,\n  DragOverlay,\n} from '@dnd-kit/core';\nimport {Draggable} from './Draggable';\nimport {Droppable} from './Droppable';\n\ninterface Props {\n  modifiers?: Modifiers;\n  grid?: string[][];\n}\n/*\nfunction Droppable(props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id: props.id,\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div className = \"drop\" ref={setNodeRef} style={style}>\n      {props.children}\n    </div>\n  );\n}\n*/\n/*\nfunction DragMain() {\n  const [parent, setParent] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const draggable = (\n    <Draggable id=\"draggable\">\n      drag\n    </Draggable>\n  );\n\n  return (\n    //<div className = \"back\">\n      <DndContext onDragEnd={handleDragEnd}>\n        {!parent ? draggable : false}\n          <Droppable key = {\"droppable\"} id = {\"droppable\"} dragging = {isDragging}>\n            {parent ? draggable : ''}\n          </Droppable>\n      </DndContext>\n    //</div>\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    setParent(event.over ? !event.over.id : false);\n    //if (event.over && event.over.id === 'droppable') {\n      //setParent(true);\n    //}\n  }\n\n}\n*/\n/*\nfunction buildGrid() {\n  const grid = Array(10).fill(Array(10))\n  const [isDragging, setIsDragging] = useState(false);\n\n  let odd = false;\n  for (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 10; x++) {\n      if (x % 10 !== 0) {\n        odd = !odd;\n      }\n\n      grid[y][x] = <div className = \"square_green\"/>;\n    }\n  }\n\n  return grid;\n}\n*/\n\ninterface DraggableProps {\n  handle?: boolean;\n}\n\nfunction DraggableItem({handle}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: 'draggable-item',\n  });\n\n   return (\n    <Draggable\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n    />\n  );\n}\n\nexport function GridGame({modifiers,}: Props) {\n    const num = -1;\n    const grid = [\n      [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"],\n      [\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\"],\n      [\"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\"],\n      [\"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\"],\n      [\"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\"],\n      [\"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"],\n      [\"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\"],\n      [\"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\"],\n      [\"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\"],\n      [\"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"],\n    ]\n    const [parent, setParent] = useState<UniqueIdentifier | null>(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [isDropped, setIsDropped] = useState(false);\n    const draggable = <DraggableItem />;\n    \n   //const grid = Array(10).fill(Array(10).fill(<div className = \"square_green\"/>))\n\n    //this.populateGrid();\n    //this.createGrid(); \n   //const grid = Array(10).fill(Array(10).fill(\"A\"))\n    //const grid = Array(10).fill(\"A\")\n    return (\n\n        <DndContext \n        modifiers={parent === null ? undefined : modifiers}\n        onDragStart={() => setIsDragging(true)}\n        onDragEnd={({over}) => {\n          setParent(over ? over.id : null);\n          setIsDragging(false);\n          num = 1;\n        }}\n        onDragCancel={() => setIsDragging(false)}\n        > \n          <div className = \"drop\">\n              {parent === null ? draggable : null}\n          </div>\n          <div className = \"grid\">\n            {grid.map((row) => { \n                return (\n                  <div>\n                    {row.map((tile:any) => {\n                      return (      \n                        <Droppable id={tile} dragging={isDragging}>\n                          {parent === tile ? draggable : 'drop'}\n                        </Droppable>   \n                      ); \n                     })}\n                  </div>\n                );\n            })}\n            \n             {/*draggable*/}\n            {/*<DragMain/>*/}\n            \n            </div>\n            <DragOverlay>\n                {isDragging ? <Draggable dragging dragOverlay /> : null}\n            </DragOverlay>\n\n        </DndContext> \n      \n    );\n}\n\n\nexport default GridGame;\n//<Tile />  "]},"metadata":{},"sourceType":"module"}