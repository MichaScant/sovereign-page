{"ast":null,"code":"import React from'react';import{useDroppable}from'@dnd-kit/core';import classNames from'classnames';import\"./GridGame.css\";import styles from\"./Droppable.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var tile=null;export function Droppable_Green(_ref){var children=_ref.children,id=_ref.id;var _useDroppable=useDroppable({id:id}),isOver=_useDroppable.isOver,setNodeRef=_useDroppable.setNodeRef;var style={opacity:isOver?1:0.5};tile=id;return/*#__PURE__*/_jsx(\"div\",{className:classNames(styles.Droppable,isOver&&styles.over,children&&styles.dropped),ref:setNodeRef,\"aria-label\":\"Droppable region\",children:children});}","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_green.tsx"],"names":["React","useDroppable","classNames","styles","tile","Droppable_Green","children","id","isOver","setNodeRef","style","opacity","Droppable","over","dropped"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,YAAR,KAA6C,eAA7C,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,2CAKA,GAAIC,CAAAA,IAAI,CAAG,IAAX,CASA,MAAO,SAASC,CAAAA,eAAT,MAAgD,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,EAAY,MAAZA,EAAY,CACrD,kBAA6BN,YAAY,CAAC,CACxCM,EAAE,CAAFA,EADwC,CAAD,CAAzC,CAAOC,MAAP,eAAOA,MAAP,CAAeC,UAAf,eAAeA,UAAf,CAGA,GAAMC,CAAAA,KAAK,CAAG,CACZC,OAAO,CAAEH,MAAM,CAAG,CAAH,CAAO,GADV,CAAd,CAGAJ,IAAI,CAAGG,EAAP,CACA,mBACE,YACA,SAAS,CAAEL,UAAU,CACnBC,MAAM,CAACS,SADY,CAEnBJ,MAAM,EAAIL,MAAM,CAACU,IAFE,CAGnBP,QAAQ,EAAIH,MAAM,CAACW,OAHA,CADrB,CAMA,GAAG,CAAEL,UANL,CAOA,aAAW,kBAPX,UASGH,QATH,EADF,CAaD","sourcesContent":["import React from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\nimport { droppable } from './droppable-svg';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\nimport styles from \"./Droppable.module.css\";\n\ntype Value =  string | number | boolean | undefined | null;\ntype Mapping = { [key: string]: any };\ntype Argument = Value | Mapping | Argument[];\nvar tile = null;\n\ninterface Props {\n  children: React.ReactNode;\n  id: UniqueIdentifier;\n}\n\n\n\nexport function Droppable_Green({children, id}: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5,\n  };\n  tile = id;\n  return (\n    <div \n    className={classNames(\n      styles.Droppable,\n      isOver && styles.over,\n      children && styles.dropped\n    )}\n    ref={setNodeRef} \n    aria-label=\"Droppable region\"\n    >\n      {children}\n    </div>  \n  );\n}"]},"metadata":{},"sourceType":"module"}