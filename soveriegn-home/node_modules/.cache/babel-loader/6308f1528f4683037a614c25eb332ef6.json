{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_green.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\nimport styles from \"./Droppable.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tile = null;\nexport function Droppable_Green(_ref) {\n  _s();\n\n  let {\n    children,\n    id\n  } = _ref;\n  const {\n    isOver,\n    setNodeRef\n  } = useDroppable({\n    id\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5\n  };\n  tile = id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(styles.Droppable, isOver && styles.over, children && styles.dropped),\n    ref: setNodeRef,\n    \"aria-label\": \"Droppable region\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Droppable_Green, \"M1MtKqUSIbNLcsMWE9E4LBK2zdk=\", false, function () {\n  return [useDroppable];\n});\n\n_c = Droppable_Green;\n\nvar _c;\n\n$RefreshReg$(_c, \"Droppable_Green\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_green.tsx"],"names":["React","useDroppable","classNames","styles","tile","Droppable_Green","children","id","isOver","setNodeRef","style","opacity","Droppable","over","dropped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA6C,eAA7C;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAKA,IAAIC,IAAI,GAAG,IAAX;AASA,OAAO,SAASC,eAAT,OAAgD;AAAA;;AAAA,MAAvB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAuB;AACrD,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAuBR,YAAY,CAAC;AACxCM,IAAAA;AADwC,GAAD,CAAzC;AAGA,QAAMG,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAEH,MAAM,GAAG,CAAH,GAAO;AADV,GAAd;AAGAJ,EAAAA,IAAI,GAAGG,EAAP;AACA,sBACE;AACA,IAAA,SAAS,EAAEL,UAAU,CACnBC,MAAM,CAACS,SADY,EAEnBJ,MAAM,IAAIL,MAAM,CAACU,IAFE,EAGnBP,QAAQ,IAAIH,MAAM,CAACW,OAHA,CADrB;AAMA,IAAA,GAAG,EAAEL,UANL;AAOA,kBAAW,kBAPX;AAAA,cASGH;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArBeD,e;UACeJ,Y;;;KADfI,e","sourcesContent":["import React from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\nimport { droppable } from './droppable-svg';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\nimport styles from \"./Droppable.module.css\";\n\ntype Value =  string | number | boolean | undefined | null;\ntype Mapping = { [key: string]: any };\ntype Argument = Value | Mapping | Argument[];\nvar tile = null;\n\ninterface Props {\n  children: React.ReactNode;\n  id: UniqueIdentifier;\n}\n\n\n\nexport function Droppable_Green({children, id}: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5,\n  };\n  tile = id;\n  return (\n    <div \n    className={classNames(\n      styles.Droppable,\n      isOver && styles.over,\n      children && styles.dropped\n    )}\n    ref={setNodeRef} \n    aria-label=\"Droppable region\"\n    >\n      {children}\n    </div>  \n  );\n}"]},"metadata":{},"sourceType":"module"}