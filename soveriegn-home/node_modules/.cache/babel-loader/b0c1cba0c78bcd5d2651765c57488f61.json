{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./GridGame.css\";\nimport { DndContext, useDraggable, DragOverlay } from '@dnd-kit/core';\nimport { Draggable } from './Draggable';\nimport { Droppable_Green } from './Droppable_green';\nimport { Droppable_white } from './Droppable_white';\nimport { Draggable2 } from './Draggable2';\nimport './DraggableProperties';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar num_G = 1;\nvar num_B = 2;\nvar draggableCheckers = new Map();\nvar count = 0;\n/*\nfunction Droppable(props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id: props.id,\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div className = \"drop\" ref={setNodeRef} style={style}>\n      {props.children}\n    </div>\n  );\n}\n*/\n\n/*\nfunction DragMain() {\n  const [parent, setParent] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const draggable = (\n    <Draggable id=\"draggable\">\n      drag\n    </Draggable>\n  );\n\n  return (\n    //<div className = \"back\">\n      <DndContext onDragEnd={handleDragEnd}>\n        {!parent ? draggable : false}\n          <Droppable key = {\"droppable\"} id = {\"droppable\"} dragging = {isDragging}>\n            {parent ? draggable : ''}\n          </Droppable>\n      </DndContext>\n    //</div>\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    setParent(event.over ? !event.over.id : false);\n    //if (event.over && event.over.id === 'droppable') {\n      //setParent(true);\n    //}\n  }\n\n}\n*/\n\nfunction buildGrid() {\n  var grid = [];\n  var element = 1;\n\n  for (let y = 1; y < 11; y++) {\n    grid[y] = [];\n\n    for (let x = 1; x < 11; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\nfunction DraggableItem({\n  handle\n}) {\n  _s();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: 'draggable-item' + num_G\n  });\n  const [parent, setParent] = useState(null);\n  const [isDragging1, setIsDragging] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    identity: num_G,\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DraggableItem, \"zJWrGw9UkXXMaBnnG0LfrraxR5I=\", false, function () {\n  return [useDraggable];\n});\n\n_c = DraggableItem;\n\nfunction DraggableItem2({\n  handle\n}) {\n  _s2();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: 'draggable-item' + num_B\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable2, {\n    identity: num_B,\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DraggableItem2, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c2 = DraggableItem2;\nexport function GridGame({\n  modifiers\n}) {\n  _s3();\n\n  const grid = buildGrid();\n  const [parent, setParent] = useState(null);\n  const [parent2, setParent2] = useState(null);\n  var [parent3, setParent3] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isDragging2, setIsDragging2] = useState(false);\n\n  const draggable2 = /*#__PURE__*/_jsxDEV(DraggableItem2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 24\n  }, this);\n\n  num_B++; //var test2 = [{const [parent3, setParent3] = useState<UniqueIdentifier | null>(null)}];\n  //const grid = Array(10).fill(Array(10).fill(<div className = \"square_green\"/>))\n  //this.populateGrid();\n  //this.createGrid(); \n  //const grid = Array(10).fill(Array(10).fill(\"A\"))\n  //const grid = Array(10).fill(\"A\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      modifiers: parent === null ? undefined : parent2 === null ? undefined : modifiers,\n      onDragStart: event => {\n        var t = draggableCheckers.get(event.active.id);\n        t[2][1](true);\n        /*\n        if (event.active.id == \"draggable-item\"+num_G) {\n          setIsDragging(true); \n        } else {\n          setIsDragging2(true);\n        } \n        */\n      },\n      onDragEnd: ({\n        over\n      }) => {\n        draggableCheckers.forEach(key => {\n          if (draggableCheckers.get(key)[2][1] == true) {\n            draggableCheckers.get(key)[1][0](over ? over.id : null);\n            draggableCheckers.get(key)[2][1](false);\n          }\n        });\n        /*\n        if (isDragging==true) {\n          setParent(over ? over.id : null);\n          setIsDragging(false);\n        } else {\n          setParent2(over && isDragging2==true ? over.id : null);\n          setIsDragging2(false);\n        }\n        */\n      },\n      onDragCancel: () => {\n        setIsDragging(false);\n        setIsDragging2(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop\",\n        children: parent2 === null ? draggable2 : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.map(tile => {\n              var rowIndex = grid.indexOf(row);\n\n              if (Number(tile) % 2 == 0 && rowIndex % 2 == 0 || Number(tile) % 2 != 0 && rowIndex % 2 != 0) {\n                const draggable = /*#__PURE__*/_jsxDEV(DraggableItem, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 43\n                }, this); //const test = draggable.type.parent;\n\n\n                draggableCheckers.set('draggable-item' + num_G, [draggable, [parent, setParent], [isDragging, setIsDragging]]);\n\n                /*#__PURE__*/\n                _jsxDEV(DragOverlay, {\n                  children: isDragging ? /*#__PURE__*/_jsxDEV(Draggable, {\n                    dragging: true,\n                    dragOverlay: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this);\n\n                num_G++;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Droppable_white, {\n                    id: tile,\n                    children: [parent === null && tile < 50 ? draggable : null, parent === tile ? draggable : '', parent2 === tile ? draggable2 : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 27\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Droppable_Green, {\n                    id: tile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(GridGame, \"6LLgMTdNU4nC4x7qx/8VeWffQTA=\");\n\n_c3 = GridGame;\nexport default GridGame; //<Tile />  \n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DraggableItem\");\n$RefreshReg$(_c2, \"DraggableItem2\");\n$RefreshReg$(_c3, \"GridGame\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx"],"names":["React","useState","DndContext","useDraggable","DragOverlay","Draggable","Droppable_Green","Droppable_white","Draggable2","num_G","num_B","draggableCheckers","Map","count","buildGrid","grid","element","y","x","String","DraggableItem","handle","isDragging","setNodeRef","listeners","id","parent","setParent","isDragging1","setIsDragging","opacity","undefined","DraggableItem2","GridGame","modifiers","parent2","setParent2","parent3","setParent3","isDragging2","setIsDragging2","draggable2","event","t","get","active","over","forEach","key","map","row","tile","rowIndex","indexOf","Number","draggable","set"],"mappings":"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","sourcesContent":["import React, { PropsWithoutRef, useState } from 'react';\nimport \"./GridGame.css\";\nimport {\n  DndContext, \n  useDraggable, \n  DragEndEvent, \n  CollisionDetection as CollisionDetectionType, \n  Modifiers, \n  UniqueIdentifier,\n  DragOverlay,\n} from '@dnd-kit/core';\nimport {Draggable} from './Draggable';\nimport {Droppable_Green} from './Droppable_green';\nimport {Droppable_white} from './Droppable_white';\nimport {Draggable2} from './Draggable2';\nimport {} from './DraggableProperties';\ninterface Props {\n  modifiers?: Modifiers;\n  grid?: string[][];\n}\n\nvar num_G = 1;\nvar num_B = 2;\nvar draggableCheckers = new Map();\nvar count = 0;\n/*\nfunction Droppable(props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id: props.id,\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div className = \"drop\" ref={setNodeRef} style={style}>\n      {props.children}\n    </div>\n  );\n}\n*/\n/*\nfunction DragMain() {\n  const [parent, setParent] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const draggable = (\n    <Draggable id=\"draggable\">\n      drag\n    </Draggable>\n  );\n\n  return (\n    //<div className = \"back\">\n      <DndContext onDragEnd={handleDragEnd}>\n        {!parent ? draggable : false}\n          <Droppable key = {\"droppable\"} id = {\"droppable\"} dragging = {isDragging}>\n            {parent ? draggable : ''}\n          </Droppable>\n      </DndContext>\n    //</div>\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    setParent(event.over ? !event.over.id : false);\n    //if (event.over && event.over.id === 'droppable') {\n      //setParent(true);\n    //}\n  }\n\n}\n*/\n\n\nfunction buildGrid() {\n  var grid: string[][] = [];\n  var element = 1;\n  for (let y = 1; y < 11; y++) {\n    grid[y] = [];\n    for (let x = 1; x < 11; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\n\ninterface DraggableProps {\n  handle?: boolean;\n}\n\nfunction DraggableItem({handle}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: 'draggable-item' + num_G,\n  });\n  const [parent, setParent] = useState<UniqueIdentifier | null>(null);\n  const [isDragging1, setIsDragging] = useState(false);\n   return (\n    <Draggable\n      identity={num_G}\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n\n    />\n  );\n}\n\n\nfunction DraggableItem2({handle}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: 'draggable-item' + num_B,\n  });\n   return (\n    <Draggable2\n    identity={num_B}\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n      \n    />\n  );\n}\n\nexport function GridGame({modifiers,}: Props) {\n    const grid = buildGrid();\n    const [parent, setParent] = useState<UniqueIdentifier | null>(null);\n    const [parent2, setParent2] = useState<UniqueIdentifier | null>(null);\n    var [parent3, setParent3] = useState<UniqueIdentifier | null>(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [isDragging2, setIsDragging2] = useState(false);\n    const draggable2 = <DraggableItem2 />;\n    num_B++;\n    //var test2 = [{const [parent3, setParent3] = useState<UniqueIdentifier | null>(null)}];\n   //const grid = Array(10).fill(Array(10).fill(<div className = \"square_green\"/>))\n\n    //this.populateGrid();\n    //this.createGrid(); \n   //const grid = Array(10).fill(Array(10).fill(\"A\"))\n    //const grid = Array(10).fill(\"A\")\n    return (\n      <div>\n      <DndContext \n        modifiers={\n          parent === null ? undefined: parent2 === null ? undefined: modifiers\n        }\n        onDragStart={(event) => {\n          var t = draggableCheckers.get(event.active.id);\n          t[2][1](true);\n          /*\n          if (event.active.id == \"draggable-item\"+num_G) {\n            setIsDragging(true); \n          } else {\n            setIsDragging2(true);\n          } \n          */\n        }}\n        onDragEnd={({over}) => {\n          draggableCheckers.forEach((key : String) => {\n            if (draggableCheckers.get(key)[2][1] == true) {\n              draggableCheckers.get(key)[1][0](over ? over.id : null)\n              draggableCheckers.get(key)[2][1](false)\n            }\n          });\n          /*\n          if (isDragging==true) {\n            setParent(over ? over.id : null);\n            setIsDragging(false);\n          } else {\n            setParent2(over && isDragging2==true ? over.id : null);\n            setIsDragging2(false);\n          }\n          */\n        }}\n        onDragCancel={() => {setIsDragging(false); setIsDragging2(false);}}\n        > \n          <div className = \"drop\">\n              {/*parent === null ? draggable : null*/}\n          </div>\n          <div className = \"drop\">  \n              {parent2 === null ? draggable2 : null}\n          </div>\n          <div className = \"grid\">\n            \n            {grid.map((row: any[]) => { \n                return (\n                  <div>\n                    {row.map((tile:any) => {\n                      var rowIndex = grid.indexOf(row);\n                      if ((Number(tile)%2 == 0 && rowIndex%2 ==0) || (Number(tile)%2 != 0 && rowIndex%2 !=0)) {\n                        const draggable = <DraggableItem/>;\n                        //const test = draggable.type.parent;\n                       \n                        draggableCheckers.set('draggable-item' + num_G, [draggable, [parent, setParent], [isDragging, setIsDragging]]);\n                        <DragOverlay>\n                          {isDragging ? <Draggable dragging dragOverlay /> : null}\n                        </DragOverlay>\n                        num_G++;\n                        return (    \n                          <div>\n                            <Droppable_white id={tile}>\n                              {parent === null && tile < 50? draggable : null}\n                              {parent === tile ? draggable : ''}\n                              {parent2 === tile ? draggable2 : ''}\n                            </Droppable_white> \n                          </div> \n                        ); \n                      } else {\n                        return (    \n                          <div>\n                             <Droppable_Green id={tile}>\n                \n                            </Droppable_Green> \n                          </div> \n                        ); \n                      }\n                     })}\n          \n                  </div>\n                );\n            })}\n            \n             {/*draggable*/}\n            {/*<DragMain/>*/}\n            </div>\n \n        \n        </DndContext> \n        </div>\n      \n    );\n}\n\n\nexport default GridGame;\n//<Tile />  "]},"metadata":{},"sourceType":"module"}