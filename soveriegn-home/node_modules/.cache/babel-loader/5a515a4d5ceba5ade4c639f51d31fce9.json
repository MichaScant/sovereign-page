{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./GridGame.css\";\nimport { DndContext, useDraggable, DragOverlay } from '@dnd-kit/core';\nimport { Draggable } from './Draggable';\nimport { Droppable_Green } from './Droppable_green';\nimport { Droppable_white } from './Droppable_white';\nimport { Draggable2 } from './Draggable2';\nimport './DraggableProperties';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentTile = -1; //var num_G = 0;\n//var num_B = 2;\n\nvar count = 0;\n/*\nfunction Droppable(props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id: props.id,\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div className = \"drop\" ref={setNodeRef} style={style}>\n      {props.children}\n    </div>\n  );\n}\n*/\n\n/*\nfunction DragMain() {\n  const [parent, setParent] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const draggable = (\n    <Draggable id=\"draggable\">\n      drag\n    </Draggable>\n  );\n\n  return (\n    //<div className = \"back\">\n      <DndContext onDragEnd={handleDragEnd}>\n        {!parent ? draggable : false}\n          <Droppable key = {\"droppable\"} id = {\"droppable\"} dragging = {isDragging}>\n            {parent ? draggable : ''}\n          </Droppable>\n      </DndContext>\n    //</div>\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    setParent(event.over ? !event.over.id : false);\n    //if (event.over && event.over.id === 'droppable') {\n      //setParent(true);\n    //}\n  }\n\n}\n*/\n\nfunction buildGrid() {\n  var grid = [];\n  var element = 1;\n\n  for (let y = 1; y < 9; y++) {\n    grid[y] = [];\n\n    for (let x = 1; x < 9; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\nfunction DraggableItem({\n  handle,\n  identifier\n}) {\n  _s();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: String(identifier)\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DraggableItem, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c = DraggableItem;\n\nfunction DraggableItem2({\n  handle\n}) {\n  _s2();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: 'draggable-item'\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable2 // identity={num_B}\n  , {\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DraggableItem2, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c2 = DraggableItem2;\nexport function GridGame({\n  modifiers\n}) {\n  _s3();\n\n  var test;\n  const grid = buildGrid();\n  const [parents, setParent] = useState(Array(25).fill(null));\n  const [parent2, setParent2] = useState(null);\n  const [isDragging, setIsDragging] = useState(Array(25).fill(false));\n  const [isDragging2, setIsDragging2] = useState(false);\n\n  const draggable2 = /*#__PURE__*/_jsxDEV(DraggableItem2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 24\n  }, this);\n\n  const draggableCheckers = [];\n\n  for (var i = 0; i < 12; i++) {\n    const draggable = /*#__PURE__*/_jsxDEV(DraggableItem, {\n      identifier: 'draggable-item' + draggableCheckers.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }, this);\n\n    draggableCheckers.push(draggable);\n  }\n\n  const arrayTile = [];\n  var counter = -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      modifiers: parents.every(element => element === null) ? undefined : parent2 === null ? undefined : modifiers,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      onDragCancel: handleDragCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop\",\n        children: parent2 === null ? draggable2 : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.map(tile => {\n              var rowIndex = grid.indexOf(row);\n\n              if (Number(tile) % 2 == 0 && rowIndex % 2 == 0 || Number(tile) % 2 != 0 && rowIndex % 2 != 0) {\n                counter++;\n                parents[counter] === null && tile < 24 ? arrayTile.push(tile) : null;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Droppable_white, {\n                    id: tile,\n                    children: [parents[counter] === null && tile < 24 ? draggableCheckers[counter] : null, parents.indexOf(tile) > -1 ? draggableCheckers[parents.indexOf(tile)] : '']\n                  }, tile, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 27\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Droppable_Green, {\n                    id: tile\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 27\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n        children: isDragging.length != 0 ? /*#__PURE__*/_jsxDEV(Draggable, {\n          dragging: true,\n          dragOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 7\n  }, this);\n\n  function isValid(toGoPlace, currentPlace) {\n    if (currentPlace + (8 - 1) == toGoPlace || currentPlace + (8 + 1) == toGoPlace) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function handleDragStart({\n    active\n  }) {\n    let newArray = [...isDragging];\n    let index = active.id;\n    var getIndex = Number(index.match(/\\d+$/));\n    newArray[getIndex] = true;\n    setIsDragging(newArray);\n    setIsDragging2(true);\n  }\n\n  function handleDragEnd(over) {\n    for (var i = 0; i < isDragging.length; i++) {\n      var _over$over;\n\n      if (isDragging[i] == true && isValid(Number((_over$over = over.over) === null || _over$over === void 0 ? void 0 : _over$over.id), 5)) {\n        var _over$over2;\n\n        let newArrayParent = [...parents];\n        let newArrayDragging = [...isDragging];\n        newArrayParent[i] = over ? (_over$over2 = over.over) === null || _over$over2 === void 0 ? void 0 : _over$over2.id : null;\n        setParent(newArrayParent);\n        newArrayDragging[i] = false;\n        setIsDragging(newArrayDragging);\n        break;\n      }\n    }\n  }\n\n  function handleDragCancel(event) {\n    let newArray = [...isDragging];\n    let index = event.active.id;\n    var getIndex = Number(index.match(/\\d+$/));\n    newArray[getIndex] = false;\n    setIsDragging(newArray);\n    setIsDragging2(false);\n  }\n}\n\n_s3(GridGame, \"HvZSe2ycOGkDzQATsE5MR9uNNp8=\");\n\n_c3 = GridGame;\nexport default GridGame; //<Tile />  \n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DraggableItem\");\n$RefreshReg$(_c2, \"DraggableItem2\");\n$RefreshReg$(_c3, \"GridGame\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx"],"names":["React","useState","DndContext","useDraggable","DragOverlay","Draggable","Droppable_Green","Droppable_white","Draggable2","currentTile","count","buildGrid","grid","element","y","x","String","DraggableItem","handle","identifier","isDragging","setNodeRef","listeners","id","opacity","undefined","DraggableItem2","GridGame","modifiers","test","parents","setParent","Array","fill","parent2","setParent2","setIsDragging","isDragging2","setIsDragging2","draggable2","draggableCheckers","i","draggable","length","push","arrayTile","counter","every","handleDragStart","handleDragEnd","handleDragCancel","map","row","tile","rowIndex","indexOf","Number","isValid","toGoPlace","currentPlace","active","newArray","index","getIndex","match","over","newArrayParent","newArrayDragging","event"],"mappings":"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","sourcesContent":["import React, { PropsWithoutRef, useState } from 'react';\nimport \"./GridGame.css\";\nimport {\n  DndContext, \n  useDraggable, \n  DragEndEvent, \n  CollisionDetection as CollisionDetectionType, \n  Modifiers, \n  UniqueIdentifier,\n  DragOverlay,\n  DragStartEvent,\n  DragCancelEvent,\n} from '@dnd-kit/core';\nimport {Draggable} from './Draggable';\nimport {Droppable_Green} from './Droppable_green';\nimport {Droppable_white} from './Droppable_white';\nimport {Draggable2} from './Draggable2';\nimport {} from './DraggableProperties';\nimport { timeline } from 'console';\ninterface Props {\n  modifiers?: Modifiers;\n  grid?: string[][];\n}\n\nvar currentTile = -1;\n\n//var num_G = 0;\n//var num_B = 2;\n\nvar count = 0;\n/*\nfunction Droppable(props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id: props.id,\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div className = \"drop\" ref={setNodeRef} style={style}>\n      {props.children}\n    </div>\n  );\n}\n*/\n/*\nfunction DragMain() {\n  const [parent, setParent] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const draggable = (\n    <Draggable id=\"draggable\">\n      drag\n    </Draggable>\n  );\n\n  return (\n    //<div className = \"back\">\n      <DndContext onDragEnd={handleDragEnd}>\n        {!parent ? draggable : false}\n          <Droppable key = {\"droppable\"} id = {\"droppable\"} dragging = {isDragging}>\n            {parent ? draggable : ''}\n          </Droppable>\n      </DndContext>\n    //</div>\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    setParent(event.over ? !event.over.id : false);\n    //if (event.over && event.over.id === 'droppable') {\n      //setParent(true);\n    //}\n  }\n\n}\n*/\n\n\nfunction buildGrid() {\n  var grid: string[][] = [];\n  var element = 1;\n  for (let y = 1; y < 9; y++) {\n    grid[y] = [];\n    for (let x = 1; x < 9; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\n\ninterface DraggableProps {\n  handle?: boolean;\n  identifier? : String\n}\n\n\n\nfunction DraggableItem({handle, identifier}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: String(identifier),\n  });\n  \n   return (\n    <Draggable\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n\n    />\n  );\n}\n\n\nfunction DraggableItem2({handle}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: 'draggable-item',\n  });\n   return (\n    <Draggable2\n   // identity={num_B}\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n      \n    />\n  );\n}\n\nexport function GridGame({modifiers,}: Props) {\n  var test : any;\n    const grid = buildGrid();\n    const [parents, setParent] = useState<UniqueIdentifier[]>(Array(25).fill(null));\n    const [parent2, setParent2] = useState<UniqueIdentifier | null>(null);\n    const [isDragging, setIsDragging] = useState<boolean[]>(Array(25).fill(false));\n    const [isDragging2, setIsDragging2] = useState(false);\n    const draggable2 = <DraggableItem2 />;\n\n    const draggableCheckers : any[] = [];\n  \n    for (var i = 0; i < 12; i++) {\n      const draggable = <DraggableItem identifier = {'draggable-item'+(draggableCheckers.length)}/>;\n      draggableCheckers.push(draggable);\n    }\n\n    const arrayTile : number[] = [];\n\n    var counter = -1;\n    return (\n      <div>\n      <DndContext \n        modifiers = {\n          parents.every((element: String | null) => element === null) ? undefined: parent2 === null ? undefined: modifiers\n        }\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragCancel}\n        > \n          <div className = \"drop\">  \n              {parent2 === null ? draggable2 : null}\n          </div>\n          <div className = \"grid\">\n            \n            {grid.map((row: any[]) => { \n                return (\n                  <div>\n                    {row.map((tile:any) => {\n                      var rowIndex = grid.indexOf(row);\n                     \n                      if (((Number(tile)%2 == 0 && rowIndex%2 ==0) || (Number(tile)%2 != 0 && rowIndex%2 !=0))) {\n                        counter++;\n                        (parents[counter] === null && tile < 24? arrayTile.push(tile) : null)\n                        return (    \n                          <div>\n                            <Droppable_white key={tile} id={tile}>\n                              {parents[counter] === null && tile < 24? draggableCheckers[counter] : null}\n                              {parents.indexOf(tile) > -1 ? draggableCheckers[parents.indexOf(tile)]: ''}\n                            </Droppable_white> \n                          </div>  \n                        ); \n                      } else {\n                        return (      \n                          <div>\n                             <Droppable_Green id={tile}>\n                \n                            </Droppable_Green> \n                          </div> \n                        ); \n                      }\n                     })}\n          \n                  </div>\n                );\n            })}\n            \n             {/*draggable*/}\n            {/*<DragMain/>*/}\n            </div>\n            \n \n            \n              <DragOverlay>\n                  {isDragging.length != 0 ? <Draggable dragging dragOverlay /> : null}\n              </DragOverlay>\n              \n \n        </DndContext> \n        </div>\n    );\n\n    function isValid(toGoPlace : number, currentPlace: number) {\n      if (currentPlace + (8-1) == toGoPlace || currentPlace + (8+1) == toGoPlace) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function handleDragStart({ active}: DragStartEvent) {\n          let newArray = [...isDragging];\n          let index = active.id\n          var getIndex = Number(index.match(/\\d+$/));\n          newArray[getIndex] = true;\n          setIsDragging(newArray);\n          setIsDragging2(true);\n    }\n\n    function handleDragEnd(over: DragEndEvent) {\n      for (var i = 0; i < isDragging.length; i++) {\n        if (isDragging[i] == true && isValid(Number(over.over?.id), 5)) {\n          let newArrayParent = [...parents];\n          let newArrayDragging = [...isDragging];\n          \n          newArrayParent[i] = (over ? over.over?.id : null as any);\n          setParent(newArrayParent);\n          \n          newArrayDragging[i] = false;\n          setIsDragging(newArrayDragging);\n          break;\n        }\n      }\n    }\n\n    function handleDragCancel(event : DragCancelEvent) {\n      let newArray = [...isDragging];\n        let index = event.active.id\n        var getIndex = Number(index.match(/\\d+$/));\n        newArray[getIndex] = false;\n        setIsDragging(newArray);\n        \n        setIsDragging2(false);\n    }\n    \n}\n\n\nexport default GridGame;\n//<Tile />  "]},"metadata":{},"sourceType":"module"}