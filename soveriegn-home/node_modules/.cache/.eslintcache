[{"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/index.tsx":"1","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/App.tsx":"2","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Gaming.tsx":"3","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx":"4","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx":"5","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable2.tsx":"6","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_green.tsx":"7","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_white.tsx":"8","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/DraggableProperties.tsx":"9","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/site.tsx":"10"},{"size":652,"mtime":1628190766601,"results":"11","hashOfConfig":"12"},{"size":437,"mtime":1642715081561,"results":"13","hashOfConfig":"12"},{"size":452,"mtime":1626473725064,"results":"14","hashOfConfig":"12"},{"size":15408,"mtime":1642714584987,"results":"15","hashOfConfig":"12"},{"size":1217,"mtime":1630010727321,"results":"16","hashOfConfig":"12"},{"size":1875,"mtime":1630012209397,"results":"17","hashOfConfig":"12"},{"size":904,"mtime":1629227561307,"results":"18","hashOfConfig":"12"},{"size":906,"mtime":1629227745895,"results":"19","hashOfConfig":"12"},{"size":483,"mtime":1629315216220,"results":"20","hashOfConfig":"12"},{"size":838,"mtime":1642715189658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1rv8q8p",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/index.tsx",["50","51","52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport GridGame from './GridGame';\nimport {DndContext} from '@dnd-kit/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals",["53","54"],"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/App.tsx",[],"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Gaming.tsx",[],"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { PropsWithoutRef, useState } from 'react';\nimport \"./GridGame.css\";\nimport {\n  DndContext, \n  useDraggable, \n  DragEndEvent, \n  CollisionDetection as CollisionDetectionType, \n  Modifiers, \n  UniqueIdentifier,\n  DragOverlay,\n  DragStartEvent,\n  DragCancelEvent,\n} from '@dnd-kit/core';\nimport {Draggable} from './Draggable';\nimport {Droppable_Green} from './Droppable_green';\nimport {Droppable_white} from './Droppable_white';\nimport {Draggable2} from './Draggable2';\nimport {} from './DraggableProperties';\nimport { timeline } from 'console';\ninterface Props {\n  modifiers?: Modifiers;\n  grid?: string[][];\n}\n\nvar isTurnRed = true;\nvar isTurnBlack = false;\n\nfunction buildGrid() {\n  var grid: string[][] = [];\n  var element = 1;\n  for (let y = 1; y < 9; y++) {\n    grid[y] = [];\n    for (let x = 1; x < 9; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\n\ninterface DraggableProps {\n  handle?: boolean;\n  identifier? : String\n}\n\n\n\nfunction DraggableItem({handle, identifier}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: String(identifier),\n  });\n  \n   return (\n    <Draggable\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n\n    />\n  );\n}\n\n\nfunction DraggableItem2({handle, identifier}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: String(identifier),\n  });\n   return (\n    <Draggable2\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n      \n    />\n  );\n}\n\nfunction isCaptureValid(toGoPlace : number, currentPlace: number, id : String, redCircles: String[], blackCircles : String[], isKing : boolean, tilesChecked: number[], tilesTaken: number[]) {\n  \n  if (currentPlace == toGoPlace) {\n    return tilesTaken;\n  }\n\n  if ((redCircles.includes(String(currentPlace)) && id === \"black\") || (blackCircles.includes(String(currentPlace))) && id === \"red\") {\n    return undefined;\n  } \n\n  if (!((currentPlace % 2 == 0 && toGoPlace % 2 == 0) || (currentPlace % 2 != 0 && toGoPlace % 2 != 0))) {\n    return undefined;\n  }\n\n  tilesChecked.push(currentPlace);\n\n    if (isKing) {\n    if (id === \"black\" && redCircles.includes(String(currentPlace + (8+1))) && (currentPlace + (8+1) > 8 && currentPlace + (8+1)) < 56 && (currentPlace + (8+1)) % 8 > 1 && tilesChecked.findIndex((tile: number) => tile === currentPlace + 2*(8+1)) == -1) {\n      let result = isCaptureValid(toGoPlace, currentPlace + 2*(8+1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n      if (result != undefined) {\n        tilesTaken.push(currentPlace + (8+1));\n        return tilesTaken;\n      }\n    } if (id === \"black\" && (redCircles.includes(String(currentPlace + (8-1)))) && (currentPlace + (8-1) > 8 && currentPlace + (8-1)) < 56 && (currentPlace + (8-1)) % 8 > 1  && tilesChecked.findIndex((tile: number) => tile === currentPlace + 2*(8-1)) == -1) {\n      let result = isCaptureValid(toGoPlace, currentPlace + 2*(8-1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n      if (result != undefined) {\n        tilesTaken.push(currentPlace + (8-1));\n        return tilesTaken;\n      }\n    }\n    \n    if (id === \"red\" &&  blackCircles.includes(String(currentPlace - (8+1))) && (currentPlace - (8+1) > 8 && currentPlace - (8+1)) < 56 && (currentPlace - (8+1)) % 8 > 1  && tilesChecked.findIndex((tile: number) => tile === currentPlace - 2*(8+1)) == -1) {\n      let result = isCaptureValid(toGoPlace, currentPlace - 2*(8+1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n      if (result != undefined) {\n        tilesTaken.push(currentPlace - (8+1));\n        return tilesTaken;\n      }\n    }\n\n    if (id === \"red\" && (blackCircles.includes(String(currentPlace - (8-1)))) && (currentPlace - (8-1) > 8 && currentPlace - (8-1)) < 56 && (currentPlace - (8-1)) % 8 > 1 && tilesChecked.findIndex((tile: number) => tile === currentPlace - 2*(8-1)) == -1) {\n      let result = isCaptureValid(toGoPlace, currentPlace -  2*(8-1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n      if (result != undefined) {\n        tilesTaken.push(currentPlace - (8-1));\n        return tilesTaken;\n      }\n    }\n  }\n\n  if (id === \"black\" && (redCircles.includes(String(currentPlace - (8-1)))) && (currentPlace - (8-1) > 8 && currentPlace - (8-1)) < 56 && (currentPlace - (8-1)) % 8 > 1  && tilesChecked.findIndex((tile: number) => tile === currentPlace - 2*(8-1)) == -1) {\n    let result = isCaptureValid(toGoPlace, currentPlace - 2*(8-1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n    if (result != undefined) {\n      tilesTaken.push(currentPlace - (8-1));\n      return tilesTaken;\n    }\n  } \n  \n  if (id === \"black\" && redCircles.includes(String(currentPlace - (8+1))) && (currentPlace - (8+1) > 8 && currentPlace - (8+1)) < 56 && (currentPlace - (8+1)) % 8 > 1 && tilesChecked.findIndex((tile: number) => tile === currentPlace - 2*(8+1)) == -1) {\n    let result = isCaptureValid(toGoPlace, currentPlace - 2*(8+1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n    if (result != undefined) {\n      tilesTaken.push(currentPlace - (8+1));\n      return tilesTaken;\n    }\n  } \n  \n  if (id === \"red\" && (blackCircles.includes(String(currentPlace + (8-1)))) && (currentPlace + (8-1) > 8 && currentPlace + (8-1)) < 56 && (currentPlace + (8-1)) % 8 > 1 && tilesChecked.findIndex((tile: number) => tile === currentPlace + 2*(8-1)) == -1) {\n    let result = isCaptureValid(toGoPlace, currentPlace + 2*(8-1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n    if (result != undefined) {\n      tilesTaken.push(currentPlace + (8-1));\n      return tilesTaken;\n    }\n  } \n  \n  let test = (currentPlace + (8+1)) % 8;\n  if (id ===\"red\" && blackCircles.includes(String(currentPlace + (8+1))) && (currentPlace + (8+1) > 8 && currentPlace + (8+1)) < 56 && (currentPlace + (8+1)) % 8 > 1 && tilesChecked.findIndex((tile: number) => tile === currentPlace + 2*(8+1)) == -1) {\n    let result = isCaptureValid(toGoPlace, currentPlace + 2*(8+1), id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken);\n    if (result != undefined) {\n      tilesTaken.push(currentPlace + (8+1));\n      return tilesTaken;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nfunction isValid(toGoPlace : number, currentPlace: number, id : String, redCircles: String[], blackCircles : String[], isKing : boolean) {\n  //checks if any pieces exist on the square the player wants to move to\n    if (currentPlace == toGoPlace) {\n    return false;\n  }\n  \n  if (redCircles.includes(String(toGoPlace)) || blackCircles.includes(String(toGoPlace))) {\n    return false;\n  } \n\n  if (isKing) {\n      //checks if a diagonal move is valid for a king piece\n      if ((currentPlace - (8-1) == toGoPlace || currentPlace - (8+1) == toGoPlace || currentPlace + (8-1) == toGoPlace || currentPlace + (8+1) == toGoPlace)) {\n        return true;\n      }\n  } \n  \n  //checks if move is valid \n  if ((currentPlace + (8-1) == toGoPlace || currentPlace + (8+1) == toGoPlace) && id === \"red\") {\n    return true;\n    //checks if move is valid\n  } else if ((currentPlace - (8-1) == toGoPlace || currentPlace - (8+1) == toGoPlace) && id === \"black\") { \n    return true;\n    //checks if move is valid for taking pieces\n  } \n  let tilesChecked: number[] = [];\n  let tilesTaken: number[] = [];\n  return isCaptureValid(toGoPlace, currentPlace, id, redCircles, blackCircles, isKing, tilesChecked, tilesTaken)\n}\n\nexport function GridGame({modifiers,}: Props) {\n  var test : any;\n    const grid = buildGrid();\n    const [parents, setParent] = useState<UniqueIdentifier[]>(Array(12).fill(null));\n    const [parent2, setParent2] = useState<UniqueIdentifier[]>(Array(12).fill(null));\n    const [isDragging, setIsDragging] = useState<boolean[]>(Array(12).fill(false));\n    const [isDragging2, setIsDragging2] = useState<boolean[]>(Array(12).fill(false));\n    const [isKing, setIsKing] = useState<boolean[]>(Array(12).fill(false))\n    const [isKing2, setIsKing2] = useState<boolean[]>(Array(12).fill(false))\n\n    const draggableCheckersR : any[] = [];\n  \n    for (var i = 0; i < 12; i++) {\n      const draggable = <DraggableItem identifier = {'draggable-itemR'+(draggableCheckersR.length)}/>;\n      draggableCheckersR.push(draggable);\n    }\n\n    const draggableCheckersB : any[] = [];\n  \n    for (var i = 0; i < 12; i++) {\n      const draggable = <DraggableItem2 identifier = {'draggable-itemB'+(draggableCheckersB.length)}/>;\n      draggableCheckersB.push(draggable);\n    }\n\n    var counterR = -1;\n    var counterG = -1;\n\n    const gridSquares = grid.map((row: any[]) => {\n          const rowSquares = row.map((tile:any) => {\n            var rowIndex = grid.indexOf(row);\n           \n            if (((Number(tile)%2 == 0 && rowIndex%2 ==0) || (Number(tile)%2 != 0 && rowIndex%2 !=0))) {\n              \n              if (tile < 24){\n                counterR++;\n              }\n\n              if (tile > 40){\n                counterG++;\n              }\n\n              if (parents[counterR] === null && tile < 24){\n                parents[counterR] = tile;\n              }\n\n              if (parent2[counterG] === null && tile > 40){\n                parent2[counterG] = tile;\n              }\n\n              return (    \n                <div>\n                  <Droppable_white key={tile} id={tile}>\n                    {parents[counterR] === null && tile < 24? draggableCheckersR[counterR]: null}\n                    {parent2[counterG] === null && tile > 40? draggableCheckersB[counterG]: null}\n                    {parent2.indexOf(tile) > -1 ? draggableCheckersB[parent2.indexOf(tile)]: ''}\n                    {parents.indexOf(tile) > -1 ? draggableCheckersR[parents.indexOf(tile)]: ''}\n                  </Droppable_white> \n                </div>  \n              ); \n            } else {\n              return (      \n                <div>\n                   <Droppable_Green key={tile} id={tile}>\n\n                  </Droppable_Green> \n                </div> \n              ); \n            }\n           });\n\n        return (<div> {rowSquares} </div>);\n          });\n\n    return (\n      <div>\n      <DndContext \n        modifiers = {\n          parents.every((element: String | null) => element === null) ? undefined: parent2.every((element: String | null) => element === null) ? undefined: modifiers\n        }\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragCancel}\n        > \n          <div className = \"grid\">\n            \n            {gridSquares}\n          \n            </div>\n              <DragOverlay>\n                  {isDragging2.includes(true) ? <Draggable2 dragging dragOverlay /> : null}\n                  {isDragging.includes(true) ?  <Draggable dragging dragOverlay /> : null}\n              </DragOverlay>\n        </DndContext> \n        </div>\n    );\n\n    function handleDragStart({ active}: DragStartEvent  ) {\n          if (active.id.includes(\"draggable-itemR\") && isTurnRed){\n            let newArray = [...isDragging];\n            let index = active.id\n            var getIndex = Number(index.match(/\\d+$/));\n            newArray[getIndex] = true;\n            setIsDragging(newArray);\n            isTurnRed = false;\n            isTurnBlack = true;\n          } else if (active.id.includes(\"draggable-itemB\") && isTurnBlack) {\n            let newArray = [...isDragging2];\n            let index = active.id\n            var getIndex = Number(index.match(/\\d+$/));\n            newArray[getIndex] = true;\n            setIsDragging2(newArray);\n            isTurnRed = true;\n            isTurnBlack = false;\n          }\n    }\n    function handleDragEnd(over: DragEndEvent) {\n      for (var i = 0; i < isDragging.length; i++) {\n        if (isDragging[i] == true) {\n          let result = isValid(Number(over.over?.id), Number(parents[i]), \"red\", parents, parent2, isKing[i]);\n          if (result != undefined){\n            let newArrayParent = [...parents];\n            let newArrayDragging = [...isDragging];\n            \n            if (Array.isArray(result)) {\n              let result2 = [...result]\n              let newArrayParent2 = [...parent2];\n              newArrayParent2 = newArrayParent2.filter(function(val) {\n                return result2.indexOf(Number(val)) < 0; \n              });\n              setParent2(newArrayParent2);\n            }\n\n            if (Number(over.over?.id) > 56) {\n              let newIsKing = [...isKing];\n              newIsKing[i] = true;\n              setIsKing(newIsKing);\n            }\n\n            newArrayParent[i] = (over ? over.over?.id : null as any);\n            setParent(newArrayParent);\n            \n            newArrayDragging[i] = false;\n            setIsDragging(newArrayDragging);\n            break;\n          } else {\n            let newArrayDragging = [...isDragging];\n            newArrayDragging[i] = false;\n            setIsDragging(newArrayDragging);\n            isTurnRed = true;\n            isTurnBlack = false;\n          }\n        } \n      }\n\n      for (var i = 0; i < isDragging2.length; i++) {\n        if (isDragging2[i] == true) {\n          let result = isValid(Number(over.over?.id), Number(parent2[i]), \"black\", parents, parent2, isKing2[i])\n          if (result != undefined) {\n            let newArrayParent = [...parent2];\n            let newArrayDragging = [...isDragging2];\n                        \n            if (Array.isArray(result)) {\n              let result2 = [...result]\n              let newArrayParent2 = [...parents];\n              newArrayParent2 = newArrayParent2.filter(function(val) {\n                return result2.indexOf(Number(val)) < 0; \n              });\n              setParent(newArrayParent2);\n            }\n            if (Number(over.over?.id) <= 8) {\n              let newIsKing = [...isKing2];\n              newIsKing[i] = true;\n              setIsKing2(newIsKing);\n            }\n\n            newArrayParent[i] = (over ? over.over?.id : null as any);\n            setParent2(newArrayParent);\n            \n            newArrayDragging[i] = false;\n            setIsDragging2(newArrayDragging);\n            break;\n          } else {\n            let newArrayDragging = [...isDragging2];\n            newArrayDragging[i] = false;\n            setIsDragging2(newArrayDragging);\n            isTurnRed = false;\n            isTurnBlack = true;\n          }\n        }\n      }\n      if (parents.join(\"\") === \"\" || parent2.join(\"\") === \"\") {\n        window.location.reload();\n      }\n    }\n\n    function handleDragCancel(event : DragCancelEvent) {\n      if (event.active.id.includes(\"draggable-itemR\")){\n        let newArray = [...isDragging];\n        let index = event.active.id\n        var getIndex = Number(index.match(/\\d+$/));\n        newArray[getIndex] = false;\n        setIsDragging(newArray);\n        isTurnRed = true;\n        isTurnBlack = false;\n      } else {\n        let newArray = [...isDragging2];\n        let index = event.active.id\n        var getIndex = Number(index.match(/\\d+$/));\n        newArray[getIndex] = false;\n        setIsDragging2(newArray);\n        isTurnRed = false;\n        isTurnBlack = true;\n      }\n    }\n    \n}\n\n\nexport default GridGame;\n//<Tile />  ","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx",[],"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable2.tsx",["106","107","108"],"import type {DraggableSyntheticListeners, Translate} from '@dnd-kit/core';\nimport React, {forwardRef} from 'react';\nimport classNames from 'classnames';\nimport styles from './Draggable.module.css';\n \n/*\nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    data-cypress=\"draggable-item\"\n    >\n      {props.children}\n    </button>\n  );\n}\n*/\n\nexport enum Axis {\n  All,\n  Vertical,\n  Horizontal,\n}\n\ninterface Props {\n  axis?: Axis;\n  dragOverlay?: boolean;\n  dragging?: boolean;\n  handle?: boolean;\n  label?: string;\n  listeners?: DraggableSyntheticListeners;\n  style?: React.CSSProperties;\n  translate?: Translate;\n  identity? : number;\n}\n\nexport const Draggable2 = forwardRef<HTMLDivElement, Props>(\n  function Draggable(\n    {\n      axis,\n      dragOverlay,\n      dragging,\n      handle,\n      label,\n      listeners,\n      translate,\n      identity,\n      ...props\n    },\n    ref\n  ) {\n\n    var id = \"draggable-item\";\n    return (\n      <div\n        style={\n          {\n            '--translate-x': `${translate?.x ?? 0}px`,\n            '--translate-y': `${translate?.y ?? 0}px`,\n          } as React.CSSProperties\n        }\n      >\n        <div\n          ref={ref}\n          {...props}\n          aria-label=\"Draggable\"\n          data-cypress={\"draggable-itemB\" + identity}\n          {...(handle ? {} : listeners)}\n          tabIndex={handle ? -1 : undefined}\n          className = \"square_black\"\n        > \n          Drag\n        </div>\n        {label ? <label>{label}</label> : null}\n      </div>\n    );\n  }\n);\n\n\n","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_green.tsx",["109","110","111","112"],"import React from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\nimport { droppable } from './droppable-svg';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\nimport styles from \"./Droppable.module.css\";\n\ntype Value =  string | number | boolean | undefined | null;\ntype Mapping = { [key: string]: any };\ntype Argument = Value | Mapping | Argument[];\nvar tile = null;\n\ninterface Props {\n  children: React.ReactNode;\n  id: UniqueIdentifier;\n}\n\n\n\nexport function Droppable_Green({children, id}: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5,\n  };\n  tile = id;\n  return (\n    <div \n    className={classNames(\n      styles.Droppable,\n      isOver && styles.over,\n      children && styles.dropped\n    )}\n    ref={setNodeRef} \n    aria-label=\"Droppable region\"\n    >\n      {children}\n    </div>  \n  );\n}","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable_white.tsx",["113","114","115","116"],"import React from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\nimport { droppable } from './droppable-svg';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\nimport styles from \"./Droppable.module.css\";\n\ntype Value =  string | number | boolean | undefined | null;\ntype Mapping = { [key: string]: any };\ntype Argument = Value | Mapping | Argument[];\nvar tile = null;\n\ninterface Props {\n  children: React.ReactNode;\n  id: UniqueIdentifier;\n}\n\n\n\nexport function Droppable_white({children, id}: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5,\n  };\n  tile = id;\n  return (\n    <div \n    className={classNames(\n      styles.Droppable_w,\n      isOver && styles.over,\n      children && styles.dropped\n    )}\n    ref={setNodeRef} \n    aria-label=\"Droppable region\"\n    >\n      {children}\n    </div>  \n  );\n}","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/DraggableProperties.tsx",["117","118","119"],"import {\n    UniqueIdentifier,\n} from '@dnd-kit/core';\n\nimport React, {useState} from 'react';\n\n/*\nconst [parent, setParent] = useState<UniqueIdentifier | null>(null);\nconst [isDragging, setIsDragging] = useState(false);\n\nexport function setParentValue(n : any) {\n    setParent(n);\n}\n\nexport function getParent(n : any) {\n    return parent;\n}\n\nexport function setIsDraggingValue(n : any) {\n    setIsDragging(n);\n}\n\nexport function getIsDragging(n : any) {\n    return isDragging;\n}\n*/","/Users/michael/Desktop/sovereign-page/soveriegn-home/src/site.tsx",["120"],"import portrait from './Michael.jpg';\nimport React from 'react';\nimport './site.css';\nimport { Link } from 'react-router-dom'\n\nconst site = () => {\n    \n    document.body.style.backgroundColor = \"#CAFBFC\";\n    //TODO\n    //document.textAlign = \"center\";\n    \n    return (\n        <div>\n        <div id=\"text-box\" className = \"title\">Hello <br /> My name is Michael Christopher Scantlebury</div>\n\n        <img src = {portrait} className = \"michael\" style = {{alignSelf: \"center\"}}/>\n\n        <div id=\"text-box\" className = \"intro\">Below is the link to the checkers game I coded while learning React and Typescript. I had a lot of fun while coding it and will definitely revist it sometime in the future</div>\n\n        <Link to = \"/game\" className= \"gameLink\">Checkers Game</Link>\n        \n        </div>\n    );\n    \n}\n\nexport default site;",{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":8,"column":9,"nodeType":"123","messageId":"124","endLine":8,"endColumn":19},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"121","severity":1,"message":"131","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":32},{"ruleId":"121","severity":1,"message":"132","line":7,"column":25,"nodeType":"123","messageId":"124","endLine":7,"endColumn":47},{"ruleId":"121","severity":1,"message":"133","line":19,"column":10,"nodeType":"123","messageId":"124","endLine":19,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":90,"column":20,"nodeType":"136","messageId":"137","endLine":90,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":94,"column":69,"nodeType":"140","messageId":"141","endLine":94,"endColumn":71},{"ruleId":"138","severity":1,"message":"139","line":94,"column":118,"nodeType":"140","messageId":"141","endLine":94,"endColumn":120},{"ruleId":"134","severity":1,"message":"135","line":98,"column":27,"nodeType":"136","messageId":"137","endLine":98,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":98,"column":49,"nodeType":"136","messageId":"137","endLine":98,"endColumn":51},{"ruleId":"134","severity":1,"message":"142","line":98,"column":76,"nodeType":"136","messageId":"137","endLine":98,"endColumn":78},{"ruleId":"134","severity":1,"message":"142","line":98,"column":98,"nodeType":"136","messageId":"137","endLine":98,"endColumn":100},{"ruleId":"134","severity":1,"message":"135","line":105,"column":247,"nodeType":"136","messageId":"137","endLine":105,"endColumn":249},{"ruleId":"134","severity":1,"message":"142","line":107,"column":18,"nodeType":"136","messageId":"137","endLine":107,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":111,"column":252,"nodeType":"136","messageId":"137","endLine":111,"endColumn":254},{"ruleId":"134","severity":1,"message":"142","line":113,"column":18,"nodeType":"136","messageId":"137","endLine":113,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":119,"column":249,"nodeType":"136","messageId":"137","endLine":119,"endColumn":251},{"ruleId":"134","severity":1,"message":"142","line":121,"column":18,"nodeType":"136","messageId":"137","endLine":121,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":127,"column":249,"nodeType":"136","messageId":"137","endLine":127,"endColumn":251},{"ruleId":"134","severity":1,"message":"142","line":129,"column":18,"nodeType":"136","messageId":"137","endLine":129,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":136,"column":248,"nodeType":"136","messageId":"137","endLine":136,"endColumn":250},{"ruleId":"134","severity":1,"message":"142","line":138,"column":16,"nodeType":"136","messageId":"137","endLine":138,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":144,"column":245,"nodeType":"136","messageId":"137","endLine":144,"endColumn":247},{"ruleId":"134","severity":1,"message":"142","line":146,"column":16,"nodeType":"136","messageId":"137","endLine":146,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":152,"column":247,"nodeType":"136","messageId":"137","endLine":152,"endColumn":249},{"ruleId":"134","severity":1,"message":"142","line":154,"column":16,"nodeType":"136","messageId":"137","endLine":154,"endColumn":18},{"ruleId":"121","severity":1,"message":"143","line":160,"column":7,"nodeType":"123","messageId":"124","endLine":160,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":161,"column":244,"nodeType":"136","messageId":"137","endLine":161,"endColumn":246},{"ruleId":"134","severity":1,"message":"142","line":163,"column":16,"nodeType":"136","messageId":"137","endLine":163,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":174,"column":22,"nodeType":"136","messageId":"137","endLine":174,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":184,"column":33,"nodeType":"136","messageId":"137","endLine":184,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":184,"column":70,"nodeType":"136","messageId":"137","endLine":184,"endColumn":72},{"ruleId":"134","severity":1,"message":"135","line":184,"column":107,"nodeType":"136","messageId":"137","endLine":184,"endColumn":109},{"ruleId":"134","severity":1,"message":"135","line":184,"column":144,"nodeType":"136","messageId":"137","endLine":184,"endColumn":146},{"ruleId":"134","severity":1,"message":"135","line":190,"column":29,"nodeType":"136","messageId":"137","endLine":190,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":190,"column":66,"nodeType":"136","messageId":"137","endLine":190,"endColumn":68},{"ruleId":"134","severity":1,"message":"135","line":193,"column":36,"nodeType":"136","messageId":"137","endLine":193,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":193,"column":73,"nodeType":"136","messageId":"137","endLine":193,"endColumn":75},{"ruleId":"121","severity":1,"message":"144","line":203,"column":7,"nodeType":"123","messageId":"124","endLine":203,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":221,"column":14,"nodeType":"123","messageId":"147","endLine":221,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":233,"column":34,"nodeType":"136","messageId":"137","endLine":233,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":233,"column":53,"nodeType":"136","messageId":"137","endLine":233,"endColumn":55},{"ruleId":"134","severity":1,"message":"142","line":233,"column":77,"nodeType":"136","messageId":"137","endLine":233,"endColumn":79},{"ruleId":"134","severity":1,"message":"142","line":233,"column":96,"nodeType":"136","messageId":"137","endLine":233,"endColumn":98},{"ruleId":"148","severity":1,"message":"149","line":253,"column":19,"nodeType":"150","messageId":"151","endLine":253,"endColumn":57},{"ruleId":"148","severity":1,"message":"152","line":264,"column":20,"nodeType":"150","messageId":"151","endLine":264,"endColumn":58},{"ruleId":"145","severity":1,"message":"153","line":310,"column":17,"nodeType":"123","messageId":"147","endLine":310,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":319,"column":27,"nodeType":"136","messageId":"137","endLine":319,"endColumn":29},{"ruleId":"134","severity":1,"message":"142","line":321,"column":22,"nodeType":"136","messageId":"137","endLine":321,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":356,"column":16,"nodeType":"123","messageId":"147","endLine":356,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":357,"column":28,"nodeType":"136","messageId":"137","endLine":357,"endColumn":30},{"ruleId":"134","severity":1,"message":"142","line":359,"column":22,"nodeType":"136","messageId":"137","endLine":359,"endColumn":24},{"ruleId":"145","severity":1,"message":"153","line":409,"column":13,"nodeType":"123","messageId":"147","endLine":409,"endColumn":21},{"ruleId":"121","severity":1,"message":"154","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"155","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"156","line":65,"column":9,"nodeType":"123","messageId":"124","endLine":65,"endColumn":11},{"ruleId":"121","severity":1,"message":"157","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":19},{"ruleId":"121","severity":1,"message":"158","line":10,"column":35,"nodeType":"123","messageId":"124","endLine":10,"endColumn":43},{"ruleId":"121","severity":1,"message":"159","line":24,"column":9,"nodeType":"123","messageId":"124","endLine":24,"endColumn":14},{"ruleId":"121","severity":1,"message":"160","line":27,"column":3,"nodeType":"123","messageId":"124","endLine":27,"endColumn":7},{"ruleId":"121","severity":1,"message":"157","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":19},{"ruleId":"121","severity":1,"message":"158","line":10,"column":35,"nodeType":"123","messageId":"124","endLine":10,"endColumn":43},{"ruleId":"121","severity":1,"message":"159","line":24,"column":9,"nodeType":"123","messageId":"124","endLine":24,"endColumn":14},{"ruleId":"121","severity":1,"message":"160","line":27,"column":3,"nodeType":"123","messageId":"124","endLine":27,"endColumn":7},{"ruleId":"121","severity":1,"message":"161","line":2,"column":5,"nodeType":"123","messageId":"124","endLine":2,"endColumn":21},{"ruleId":"121","severity":1,"message":"162","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"121","severity":1,"message":"163","line":5,"column":16,"nodeType":"123","messageId":"124","endLine":5,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":16,"column":9,"nodeType":"150","endLine":16,"endColumn":86},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'GridGame' is defined but never used.","'DndContext' is defined but never used.","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'PropsWithoutRef' is defined but never used.","'CollisionDetectionType' is defined but never used.","'timeline' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","'test' is assigned a value but never used.","'test' is defined but never used.","@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","react/jsx-pascal-case","Imported JSX component Droppable_white must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Droppable_Green must be in PascalCase or SCREAMING_SNAKE_CASE","'getIndex' is already defined.","'classNames' is defined but never used.","'styles' is defined but never used.","'id' is assigned a value but never used.","'droppable' is defined but never used.","'Argument' is defined but never used.","'style' is assigned a value but never used.","'tile' is assigned a value but never used.","'UniqueIdentifier' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]