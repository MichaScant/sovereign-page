{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDraggable } from '@dnd-kit/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Draggable(props) {\n  _s();\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform\n  } = useDraggable({\n    id: props.id\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`\n  } : undefined;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: setNodeRef,\n    style: style,\n    ...listeners,\n    ...attributes,\n    className: \"button\",\n    \"aria-label\": \"Draggable\",\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Draggable, \"wXB4DiqvREJRF4bN0qOYbtrIRZY=\", false, function () {\n  return [useDraggable];\n});\n\n_c = Draggable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draggable\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Draggable.tsx"],"names":["useDraggable","Draggable","props","attributes","listeners","setNodeRef","transform","id","style","x","y","undefined","children"],"mappings":";;;AAAA,SAAQA,YAAR,QAA2B,eAA3B;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AACpC,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA;AAApC,MAAiDN,YAAY,CAAC;AAClEO,IAAAA,EAAE,EAAEL,KAAK,CAACK;AADwD,GAAD,CAAnE;AAGA,QAAMC,KAAK,GAAGF,SAAS,GAAG;AACxBA,IAAAA,SAAS,EAAG,eAAcA,SAAS,CAACG,CAAE,OAAMH,SAAS,CAACI,CAAE;AADhC,GAAH,GAEnBC,SAFJ;AAIA,sBACE;AACA,IAAA,GAAG,EAAEN,UADL;AAEA,IAAA,KAAK,EAAEG,KAFP;AAAA,OAGIJ,SAHJ;AAAA,OAIID,UAJJ;AAKA,IAAA,SAAS,EAAC,QALV;AAMA,kBAAW,WANX;AAAA,cAQGD,KAAK,CAACU;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApBeX,S;UACyCD,Y;;;KADzCC,S","sourcesContent":["import {useDraggable} from '@dnd-kit/core';\n \nexport function Draggable(props: any) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id,\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  return (\n    <button \n    ref={setNodeRef} \n    style={style} \n    {...listeners} \n    {...attributes} \n    className=\"button\"\n    aria-label=\"Draggable\"\n    >\n      {props.children}\n    </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}