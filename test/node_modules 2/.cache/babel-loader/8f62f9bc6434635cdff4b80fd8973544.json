{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport \"./GridGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Droppable({\n  children,\n  id,\n  dragging\n}) {\n  _s();\n\n  const {\n    isOver,\n    setNodeRef\n  } = useDroppable({\n    id\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square_green\",\n    ref: setNodeRef,\n    \"aria-label\": \"Droppable region\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Droppable, \"M1MtKqUSIbNLcsMWE9E4LBK2zdk=\", false, function () {\n  return [useDroppable];\n});\n\n_c = Droppable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Droppable\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/Droppable.tsx"],"names":["React","useDroppable","Droppable","children","id","dragging","isOver","setNodeRef","style","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA6C,eAA7C;AAGA,OAAO,gBAAP;;AAYA,OAAO,SAASC,SAAT,CAAmB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,EAAX;AAAeC,EAAAA;AAAf,CAAnB,EAAoD;AAAA;;AACzD,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAuBN,YAAY,CAAC;AACxCG,IAAAA;AADwC,GAAD,CAAzC;AAGA,QAAMI,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAEH,MAAM,GAAG,CAAH,GAAO;AADV,GAAd;AAIA,sBACE;AACA,IAAA,SAAS,EAAG,cADZ;AAEA,IAAA,GAAG,EAAEC,UAFL;AAGA,kBAAW,kBAHX;AAAA,cAKGJ;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjBeD,S;UACeD,Y;;;KADfC,S","sourcesContent":["import React from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\nimport { droppable } from './droppable-svg';\nimport classNames from 'classnames';\nimport \"./GridGame.css\";\n\ntype Value =  string | number | boolean | undefined | null;\ntype Mapping = { [key: string]: any };\ntype Argument = Value | Mapping | Argument[];\n\ninterface Props {\n  children: React.ReactNode;\n  dragging: boolean;\n  id: UniqueIdentifier;\n}\n\nexport function Droppable({children, id, dragging}: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n  const style = {\n    opacity: isOver ? 1 : 0.5,\n  };\n  \n  return (\n    <div \n    className = \"square_green\"\n    ref={setNodeRef} \n    aria-label=\"Droppable region\"\n    >\n      {children}\n    </div>  \n  );\n}"]},"metadata":{},"sourceType":"module"}